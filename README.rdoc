== README

*** you can see a current live version of the app at:
https://salty-inlet-98879.herokuapp.com/
***

This is a simple Rails app origially built as a learning exercise. It is a simple character builder for the 5th addition of Dungeons and Dragons(D&D). The content used is based on wizards of the coast System Referance Documents(SRD) free content of the basic addition of D&D, 5th addition.

*** Update, June 10th, 2020 ***
The most recent feature uses the scr content provided by the https://www.dnd5eapi.co/ api to create a content reference. It’s built using a one-page app approach, updating the section of the page with the ‘reference’ class rather than the entire page. I used a MVC  design pattern replacing the model with a state machine. Buttons were added to the top right for navigation. The app tracks history, currentPage and forward and uses the nav buttons to navigate between these pages. 
This feature was deployed in an incomplete state, their are several views including Classes and Races that have been replaced with at notice regarding this. I have deployed the content reference feature in an unfinished state so that I can demonstrate the work I have completed while I spend time getting familiar with a new technology. I have been curious about the React.js framework for a while now and I believe it will help me going forward with this project. I will use the React framework to finish this feature and deploy it soon. For more information regarding my learning progression as a web developer you can visit my Medium Blog at https://medium.com/@jeremybissonnette.
This section of the app can be accessed using the SRC Content link in the top right. 
*** End Update ***

* originally buil on rails 4.2 and ruby 2.2 but has been upgraded to rails 6.0.2 and ruby 2.7. At the this point in time simple intergration testing shows it is running fine.

* Rails version 6.0.2
* Ruby version = 2.7

Database creation
* due to legacy code base the original rails version had to be specifyed in the migrations(ie. class CreateUsers < ActiveRecord::Migration[4.2])

Getting Started - Mac OS

* git clone - https://github.com/Jeremykw/dnd_5e.git
* brew install ruby 2.7 - optinally us rvm or rbenv to control ruby versions
* gem install bundle
* cd... into prodject dir.
* bundle install
* bin/rails db:migrate - initialize database
* rails server - Runs the app in the development mode. - [http://localhost:3000] to view it in the browser. 


During development api requests to 'https://dnd5e/api.co' need to be proxied away from the 'localhost://3000'. Using 'https://cors-anywhere.herokuapp.com/' works but can be slow and inconsistent. cloneing the cors-anywhere repo and deploying an individul proxy server seems to work much better:

* git clone https://github.com/Rob--W/cors-anywhere.git
* cd cors-anywhere
* npm install
* heroku create
* git push heroku master
* copy supplied url and past it before 'https://dnd5e/api.co'

New Deployment instructions

* javascript files need to be precompiled - 'rake assets:precompile'
* install - 'brew tap heroku/brew && brew install heroku'
* create/login - 'heroku login'
* update master branch of git - 'git add .' - 'git ci *m "last commit before heroku deployment" - 'git push'
* 'heroku create'
* deploy - 'git push heroku master'
* migrate db on heroku server - 'heroku run rake db:migrate'
* ensure their is at least on dyno running - 'heroku ps:scale web=1' - 'heroku ps' - list running dynos
* run application - 'heroku open'

Update existing live app: https://salty-inlet-98879.herokuapp.com/
* precompiled javascript files - 'rake assets:precompile'
* create/login - 'heroku login'
* update master branch of git - 'git add .'' - 'git ci -m "last commit before heroku deployment"' - 'git push'
* deploy - 'git push heroku master'
* migrate db on heroku server - 'heroku run rake db:migrate' - if their were any db changesh
* run application - 'heroku open'

*** in config/enviroments/production.rb config.assets.compile = was set to true to allow static background image to be served in production. This will have preformance issues and another solution needs to be found if app is to be up-scaled ***

<tt>rake doc:app</tt>.

